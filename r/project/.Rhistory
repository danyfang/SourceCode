?qqnorm
x = matrix(1:20, 4,5)
x[2]
x
x[2,]
x[2]
x[3]
x[4]
x[3:4,2]
?rownames
x= airmiles
x
x.attach()
attach()
attach(x)
x
typeof(x)
x = cars
typeof(x)
crimtab
typeof(crimtab)
x = crimtab
x
plot(rnom(50), pch=7)
plot(rnorm(50), pch=7)
par(mfrow=4)
par(mfrow=4)
par('mfrow'=4)
par('mfrow'=c(2,2))
plot(rnorm(50), pch=8)
plot(rnorm(50), cex=0.5)
plot(rnorm(50), lty=5)
plot(rnorm(50), lwd=3)
title('Norm plot')
title('Norm plot')
mtext('my title')
for(i in 1:10){}
for(i in 1:10){print(i)}
i = 0
i++
1
feelings = c('happy', 'sad')
for(f in feelings){print(switch(i, 'happy'='I am happy', 'sad'='I am sad', 'angry'='I am angry'))}
for(f in feelings){print(switch(i, happy='I am happy', sad='I am sad', angry='I am angry'))}
feelings = c('happy', 'sad', 'angry', 'down')
for(f in feelings){
print(
switch(f, happy='I am very happy',
sad='I am very sad',
angry='I am angry',
down='I am down'
)
)
}
feelings = c('happy', 'sad', 'angry', 'down')
for(f in feelings){
print(
switch(f, happy='I am very happy',
sad='I am very sad',
angry='I am angry',
down='I am down',
good='I am feeling good'
)
)
}
feelings = c('happy', 'sad', 'angry', 'down')
for(f in feelings){
print(
switch(f, happy='I am very happy',
sad='I am very sad',
angry='I am angry',
down='I am down',
good='I am feeling good'
)
)
}
?curve
fun = function(x, a, b, c){
return(a*sin(x)^2 +b*x +c)
}
curve(fun(x, 20, 3, 4), xlim=c(1,20))
par(mfrow=c(1,1))
# define a function
fun = function(x, a, b, c){
return(a*sin(x)^2 +b*x +c)
}
curve(fun(x, 20, 3, 4), xlim=c(1,20))
title('A strange function')
title('A strange function')
install.packages(vcd)
install.packages("vcd")
library(vcd)
counts = table(Arthritis$Improved)
library(vcd)
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
library(vcd)
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
barplot(counts, main='Horizontal Bar Plot', xlab='Improved',
ylab='Frequency', horiz=True)
library(vcd)
true = TRUE
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
barplot(counts, main='Horizontal Bar Plot', xlab='Improved',
ylab='Frequency', horiz=true)
counts = table(Arthristis$Improved, Arthritis$Treatment)
library(vcd)
true = TRUE
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
barplot(counts, main='Horizontal Bar Plot', xlab='Improved',
ylab='Frequency', horiz=true)
counts = table(Arthristis$Improved, Arthritis$Treatment)
library(vcd)
true = TRUE
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
barplot(counts, main='Horizontal Bar Plot', xlab='Improved',
ylab='Frequency', horiz=true)
counts = table(Arthritis$Improved, Arthritis$Treatment)
counts
counts
library(vcd)
true = TRUE
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
barplot(counts, main='Horizontal Bar Plot', xlab='Improved',
ylab='Frequency', horiz=true)
counts = table(Arthritis$Improved, Arthritis$Treatment)
counts
barplot(counts, main='Stacked Bar Plot', xlab='Treatment', ylab='Frequency',
col=c('red', 'yellow', 'green'))
col=c('red', 'yellow', 'green'), legend=rownames(counts))
col=c('red', 'yellow', 'green'), legend=rownames(counts))
rownames(counts)
barplot(counts, main='Stacked Bar Plot', xlab='Treatment', ylab='Frequency',
col=c('red', 'yellow', 'green'),
legend=rownames(counts))
legend=rownames(counts), beside = true)
library(vcd)
true = TRUE
counts = table(Arthritis$Improved)
counts
par(mfrow=c(2,2))
barplot(counts, main='Simple Bar Plot', xlab='Improved', ylab='Frequency')
barplot(counts, main='Horizontal Bar Plot', xlab='Improved',
ylab='Frequency', horiz=true)
counts = table(Arthritis$Improved, Arthritis$Treatment)
counts
barplot(counts, main='Stacked Bar Plot', xlab='Treatment', ylab='Frequency',
col=c('red', 'yellow', 'green'),
legend=rownames(counts), beside = true)
install.packages('plotrix')
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=300, radius = 1)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=300, radius=1)
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=300, radius = 2)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=300, radius=2)
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=500, radius = 2)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=500, radius=2)
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=500, radius = 2)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=500, radius=2)
?pie
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=300, radius = 2)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=300, radius=2)
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=300, radius = 1.5)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=300, radius=1.5)
## Pie Chart
library(plotrix)
par(mfrow=c(2,2))
slices=c(10,12,4,6,8)
labels1=c('England','China','Germany','Holland','USA')
pie(slices, labels=labels1, main='Simple Pie Chart', edges=300, radius = 1)
percentage=round(slices/sum(slices)*100)
labels2=paste(labels1, " ", percentage, "%", sep=" " )
pie(slices, labels=labels2, col=rainbow(length(labels2)),
main='Pie Chart with Percentages', edges=300, radius=1)
pie3D(slices, labels=labels1, main="Simple 3D Pie Chart",
explode=0.1, edges=300, radius=1)
dotchart(mtcars$mpg, cex=0.7, main='Gas Mileage for Car Models',
xlab='Miles Per Galon')
dotchart(mtcars$mpg, cex=0.7, labels=rownames(mtcars)
main='Gas Mileage for Car Models',
xlab='Miles Per Galon')
dotchart(mtcars$mpg, cex=0.7, labels=row.names(mtcars),
main='Gas Mileage for Car Models',
xlab='Miles Per Galon')
par(mfrow=c(1,1))
dotchart(mtcars$mpg, cex=0.7, labels=row.names(mtcars),
main='Gas Mileage for Car Models',
xlab='Miles Per Galon')
set.seed(123)
A = matrix(sample(100,15), nrow=5 ncol=3)
A = matrix(sample(100,15), nrow=5, ncol=3)
A
colMeans(A)
rowMeans(A)
A
factor()
?factor
x = sample(100,20)
x
x[1]
x[0]
f = 2*x+3
x = [1:10:0.01]
x <- c(1,10,0.01)
x <- 1:10:0.01
x <- 1:10,0.01
x <- [1:10,0.01]
x = c(1:10)
x
x = seq(-10,10,0.01)
length(x)
exp(0.91)
exp(0.91)/(1+exp(0.91))
a = c(194.9,194.4,194.6,193.8,193.8,195.1,194.3,191.9,192.6,195.9)
mean(a)
b = c(173.0,172.4,173.1,171.7,172.2,171.7,173.2,176.2,175.0,174.7
)
mean(b)
c = c(173.3,170.6,171.3,170.8,169.8,172.4,171.3,171.4,174.6,172.5)
mean(c)
d = c(170.8 , 170.6 , 169.1 , 170.0 , 170.4 , 170.7 , 170.3 , 170.6 , 169.3 , 169.1)
mean(d)
e = c(169.6 , 168.8 , 169.4 , 167.9 , 169.6 , 171.1 , 170.3 , 168.8 , 169.5 , 171.1)
mean(e)
f = c(169.1 , 168.7 , 171.3 , 169.8 , 173.9 , 168.3 , 168.5 , 170.7 , 168.9 , 169.3)
mean(f)
x <- c(-10, 10, 0.1)
x
x <- c(0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4, 2.6)
y = x*x - 2*x  -3
plot(y)
