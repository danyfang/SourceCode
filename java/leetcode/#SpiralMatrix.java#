//Leetcode problem 54 Spiral Matrix
//Solution written by Xuqiang Fang on 14 March 2018 
/*
Given a matrix of m x n elements (m rows, n columns), return all elements of
the matrix in spiral order.
*/
import java.util.List;
import java.util.ArrayList;

class Solution{
	public List<Integer> spiralOrder(int[][] matrix) {
       	List<Integer> list = new ArrayList<Integer>();
		if(matrix == null)
			return list;

		int row = matrix.length;
		int col = matrix[0].length;

		int u = 0, d = row - 1, l = 0, r = col - 1;
		while(true){
			for(int c = l; c <= r; c++)
				list.add(matrix[u][c]);
			if(++u > d)
				break;

			for(int x = u; x <= d; x++)
				list.add(matrix[x][r]);
			if(--r < l)
				break;

			for(int c=r; c >= l; c--)
				list.add(matrix[d][c]);
			if(--d < u)
				break;

			for(int x = d; x >= u; x--)
				list.add(matrix[x][l]);
			if(++l > r)
				break;
		}
		return list;
    }	
}

public class SpiralMatrix{
	public static void main(String[] args){
		Solution s = new Solution();
		int[][] matrix = {{1,2,3},{4,5,6},{7,8,9}};
		System.out.println(s.spiralOrder(matrix));
	}
}
