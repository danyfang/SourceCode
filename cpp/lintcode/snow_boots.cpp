//Leetcode Problem No 
//Solution written by Xuqiang Fang on 

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <queue>

using namespace std;

class Solution {
public:
  /**
   * @param n: The number of bricks.
   * @param b: The number of boots.
   * @param f: The thickness of snow on bricks.
   * @param s: The boots maximum depth of walking.
   * @param d: The boots maximum length of walking.
   * @return: Return the minimum number of boots you should discard.
   */
  int getMinimumNumOfBoots(int n, int b, vector<int> &f, vector<int> &s, vector<int> &d) {
    // Write your code here.
    vector<int> dp(n, 0);
    dp[0] = 1;
    for(int i=0; i<b; ++i){
      for(int j=0; j<n; ++j){
        if(dp[j]){
          for(int x=1; x<=d[i] && x+j<n; ++x){
            if(f[x+j] <= s[i]){
              dp[x+j] = 1;
            }
          }
        }
      }
      if(dp[n-1])
        return i;      
    }
    return -1;
  }
};

int main(){
  Solution s;
  int n = 250;
  int b = 250;
  vector<int> f{0,194,237,100,214,240,22,79,198,173,248,167,201,139,205,189,178,134,136,121,150,6,209,94,171,158,160,133,191,141,95,28,232,25,127,45,154,117,107,206,31,138,123,184,26,202,85,44,200,144,218,24,220,103,102,223,170,217,91,213,234,4,182,70,93,98,81,210,140,106,166,71,39,92,176,66,177,37,54,175,116,225,151,27,190,233,43,126,152,16,96,62,33,135,143,47,146,51,187,180,110,207,132,156,101,169,192,193,1,245,186,76,115,58,41,63,181,53,50,172,65,128,32,42,52,74,222,38,99,243,113,120,86,67,12,226,145,137,30,108,7,246,34,165,185,163,77,142,11,153,174,161,55,49,104,155,90,238,23,29,80,75,129,73,162,147,20,89,241,224,64,84,168,118,159,5,122,236,183,244,131,208,125,221,61,57,68,229,188,197,8,196,203,216,235,119,10,195,247,227,179,215,211,2,230,36,97,112,3,228,18,69,17,72,148,15,239,59,124,242,83,199,105,21,9,164,35,46,14,157,212,60,231,111,87,219,109,88,78,40,204,82,48,149,19,130,114,56,13,0};
  vector<int> st{4,3,3,1,1,3,5,4,3,1,2,22,20,20,5,23,11,9,7,9,1,12,4,7,8,19,6,19,16,12,9,40,29,16,34,26,26,15,28,22,33,16,35,26,1,32,82,35,37,80,13,72,72,10,32,66,79,1,31,25,52,39,39,51,37,9,30,29,1,11,35,60,77,71,64,40,22,72,31,53,79,15,28,57,54,39,29,26,51,10,29,30,72,34,44,66,81,36,39,7,32,76,48,38,77,24,59,70,46,85,49,72,9,73,36,83,77,46,42,72,69,9,47,27,34,58,5,8,57,75,58,52,57,54,50,4,14,37,27,30,57,33,72,126,26,7,14,74,5,21,111,49,24,122,11,59,19,65,10,65,13,71,25,101,90,109,52,78,114,19,100,23,124,2,46,33,14,39,54,63,18,50,42,51,66,86,16,53,45,22,48,36,94,118,117,81,19,103,101,38,110,25,92,59,86,34,87,42,28,34,31,81,16,57,119,86,55,89,63,110,28,8,39,5,100,27,34,92,22,107,110,49,16,45,26,123,66,50,125,54,99,45,55,112,119,123,47,34,74,250};
  vector<int> d{2,2,1,1,1,1,1,1,2,1,1,2,5,2,1,1,3,4,7,1,3,16,3,14,10,2,8,13,13,6,12,2,12,14,10,3,11,11,15,9,6,16,12,5,8,13,2,5,11,11,13,9,5,10,9,4,3,20,4,2,16,3,4,8,2,14,1,2,15,18,16,17,19,16,19,2,9,18,4,17,9,15,17,6,1,17,8,15,14,11,6,2,11,10,14,6,18,6,4,2,5,13,12,12,59,7,6,39,48,1,52,46,20,57,28,11,50,23,37,35,31,11,17,2,23,35,14,37,42,4,49,25,19,6,19,36,19,18,40,34,39,9,50,2,45,51,11,49,3,6,50,39,47,35,38,16,7,30,50,28,4,32,8,52,34,12,29,32,47,13,22,7,55,57,38,5,9,42,29,54,39,31,11,18,58,46,38,8,23,24,12,27,6,38,32,58,12,32,23,23,24,43,33,43,6,52,28,37,37,22,4,15,49,19,57,55,10,48,12,13,13,16,48,2,35,18,47,20,1,30,40,50,26,52,30,7,53,18,44,32,22,53,2,39,48,14,9,58,1,249};
  cout << st[49] << endl;
  cout << s.getMinimumNumOfBoots(n, b, f, st, d) << endl;
  n = 10;
  b = 4;
  f = {0,2,8,3,6,7,5,1,4,0};
  st = {2,4,3,7};
  d = {3,2,4,1};
  cout << s.getMinimumNumOfBoots(n, b, f, st, d) << endl;
  cout << "answer is 49" << endl;

}
